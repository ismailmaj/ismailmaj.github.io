{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-f02089026400fec9e8c6.js","mappings":"mKAOsBA,E,iECctB,EAba,SAAHC,GAAA,IAAMC,EAAQD,EAARC,SAAQ,OACtBC,EAAAA,EAAAA,IAAA,WACEC,GAAI,CACFC,GAAI,CAAC,EAAG,EAAG,GACXC,GAAI,CAAEC,OAAQ,EAAGC,QAAS,GAC1BC,GAAI,CAAEC,UAAU,OAASL,GAAI,EAAGM,EAAG,CAAEC,QAAQ,mBAC7CA,QAAQ,mBAGTV,EACO,E,mFDPNW,GAJgBb,EAIK,OAJG,SAA6Bc,GAEzD,OADAC,QAAQC,KAAK,aAAehB,EAAO,4EAC5BiB,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAEMI,EAAc,CAClBC,aAP0B,CAAC,GAUd,SAASC,EAAUnB,GAG/B,IAFDoB,EAAUpB,EAAVoB,WACGP,GAAKQ,EAAAA,EAAAA,GAAArB,EAAAsB,GAER,OAAON,EAAAA,EAAAA,KALS,UAKCO,OAAAC,OAAA,GAAKP,EAAiBJ,EAAK,CAAEO,WAAYA,EAAYK,QAAQ,eAC5ET,EAAAA,EAAAA,KAACJ,EAAI,CAACT,GAAI,CACRuB,SAAU,CAAC,EAAG,EAAG,GACjBC,WAAY,OACZC,MAAO,WACNH,QAAQ,QAAO,QAGlBT,EAAAA,EAAAA,KAAA,wDAAkDA,EAAAA,EAAAA,KAAA,MAAIa,WAAW,MAAS,yFAI9E,CAEAV,EAAWW,gBAAiB,E,qBE3BtBb,EAAc,CAClBC,aAF0B,CAAC,GAKd,SAASC,EAAUnB,GAG/B,IAFDoB,EAAUpB,EAAVoB,WACGP,GAAKQ,EAAAA,EAAAA,GAAArB,EAAAsB,GAER,OAAON,EAAAA,EAAAA,KALS,UAKCO,OAAAC,OAAA,GAAKP,EAAiBJ,EAAK,CAAEO,WAAYA,EAAYK,QAAQ,cAGhF,CAEAN,EAAWW,gBAAiB,ECY5B,IAqBA,EArBiB,SAAH9B,GAA+B,IAAzB+B,EAAK/B,EAAL+B,MAClBC,GAA+BC,EAAAA,EAAAA,KAAvBC,EAAQF,EAARE,SAAUC,EAAQH,EAARG,SACVC,GAAcC,EAAAA,EAAAA,KAAdD,UAER,OACElC,EAAAA,EAAAA,IAACoC,EAAAA,EAAM,MACLpC,EAAAA,EAAAA,IAAA,MAAIC,GAAIoC,EAAAA,GAAiBH,IACzBlC,EAAAA,EAAAA,IAAA,WAASC,GAAI,CAAEC,GAAI,CAAC,EAAG,EAAG,GAAIoC,EAAG,CAAEd,SAAU,CAAC,EAAG,EAAG,GAAIe,GAAI,GAAK9B,QAAQ,kBACvET,EAAAA,EAAAA,IAACwC,EAAI,QAEPxC,EAAAA,EAAAA,IAACyC,EAAAA,EAAK,CAACC,KAAK,iBACV1C,EAAAA,EAAAA,IAAC2C,EAAAA,KAAI,CAACC,IAAIC,EAAAA,EAAAA,GAAe,IAAIb,EAAQ,IAAIC,IAAa,oBAExDjC,EAAAA,EAAAA,IAAC8C,EAAAA,EAAO,CAACjB,MAAOA,EAAOkB,UAAU,KACjC/C,EAAAA,EAAAA,IAACgD,EAAI,MACHhD,EAAAA,EAAAA,IAACiD,EAAM,OAIf,EChDA,MCQe,SAAgCnD,GAAuB,IAAjBa,EAAKU,OAAAC,OAAA,GAAAxB,GAE9CoD,EACNvC,EADFwC,KAAQD,QAGV,OAAOE,EAAAA,cAACC,EAAQhC,OAAAC,OAAA,CAACO,MAAOqB,EAAQI,OAAW3C,GAC7C,C","sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Text sx={{\n      fontSize: [3, 4, 5],\n      fontWeight: `bold`,\n      color: `heading`\n    }} mdxType=\"Text\">\n  Hi! \n    </Text>\n    <p>{`I'm Ismail, a software engineer from Paris.`}<br parentName=\"p\"></br>{`\n`}{`I use this website as a way to document whatever I'm working on in my free time.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n"],"names":["name","_ref","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","Text","props","console","warn","mdx","layoutProps","_frontmatter","MDXContent","components","_objectWithoutPropertiesLoose","_excluded","Object","assign","mdxType","fontSize","fontWeight","color","parentName","isMDXComponent","posts","_useMinimalBlogConfig","useMinimalBlogConfig","basePath","blogPath","siteTitle","useSiteMetadata","Layout","visuallyHidden","p","mt","Hero","Title","text","Link","to","replaceSlashes","Listing","showTags","List","Bottom","allPost","data","React","Homepage","nodes"],"sourceRoot":""}